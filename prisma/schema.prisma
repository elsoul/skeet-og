generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  uid          String         @unique
  name         String         @default("Ninja")
  email        String
  pubkey       String?
  iconUrl      String?
  job          Job
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  accountUsers AccountUsers[]
}

enum Job {
  DEV
  CLIENT
  DEGEN
}

model Account {
  id               Int                @id @default(autoincrement())
  uid              String             @unique
  name             String
  iconUrl          String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  accountKeys      AccountKeys[]
  accountUsers     AccountUsers[]
  accountWallets   AccountWallets[]
  accountExchanges accountExchanges[]
}

model accountExchanges {
  id        Int      @id @default(autoincrement())
  name      String   @default("Ninja")
  loginUrl  String   @default("https://login.com")
  login     String   @default("")
  password  String   @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accountId Int?
  Account   Account? @relation(fields: [accountId], references: [id])
}

model AccountWallets {
  id         Int      @id @default(autoincrement())
  name       String   @default("Ninja")
  pubkey     String   @default("")
  privateKey String   @default("")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  accountId  Int?
  Account    Account? @relation(fields: [accountId], references: [id])
}

model AccountUsers {
  id        Int      @id @default(autoincrement())
  role      Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int?
  accountId Int?
  Account   Account? @relation(fields: [accountId], references: [id])
  User      User?    @relation(fields: [userId], references: [id])
}

model AccountKeys {
  id        Int      @id @default(autoincrement())
  name      String
  accessKey String
  secretKey String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accountId Int?
  Account   Account? @relation(fields: [accountId], references: [id])
}
